<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>Spring 整合连接池</description>

    <!-- 防SQL注入过滤器 -->
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="mysql"/>
        <property name="config" ref="wall-filter-config"/>
    </bean>
    <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig">
        <property name="multiStatementAllow" value="true"/>
    </bean>

    <!--数据库连接池 dataSource--><!--destroy-method="close"-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <!-- 密码加密 -->
        <property name="connectionProperties" value="config.decrypt=true;config.decrypt.key=${db.publicKey}"/>
        <property name="password" value="${db.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="200"/>
        <!-- 配置获取连接等待超时的时间，配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。-->
        <!-- <property name="maxWait" value="60000" /> -->
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
        <property name="testWhileIdle" value="true"/>
        <!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnReturn" value="false"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小，对支持游标的数据库性能提升巨大， 如果用Oracle，则把poolPreparedStatements配置为true，mysql下建议关闭。-->
        <property name="poolPreparedStatements" value="false"/>
        <!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100-->
        <property name="maxPoolPreparedStatementPerConnectionSize" value="0"/>
        <!-- 配置removeAbandoned对性能会有一些影响，建议怀疑存在泄漏之后再打开。当程序存在缺陷时，申请的连接忘记关闭，这时候，就存在连接泄漏了。Druid提供了RemoveAbandanded相关配置，用来关闭长时间不使用的连接。-->
        <!-- <property name="removeAbandoned" value="true" /> -->
        <!-- <property name="removeAbandonedTimeout" value="300" /> -->
        <!-- <property name="logAbandoned" value="true" /> -->
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="config,wall,stat"/>
        <property name="proxyFilters">
            <list>
                <!-- 监控信息过滤器 -->
                <ref bean="stat-filter"/>
                <!-- 防注入的话从前台传排序字段排序不好用 -->
                <ref bean="wall-filter"/>
            </list>
        </property>
    </bean>

    <!-- 监控信息过滤器 -->
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <!-- slowSqlMillis用来配置SQL慢的标准，执行时间超过slowSqlMillis的就是慢。 -->
        <property name="slowSqlMillis" value="10000"/>
        <property name="logSlowSql" value="true"/>
        <property name="mergeSql" value="true"/>
        <property name="dbType" value="mysql"/>
    </bean>


</beans>